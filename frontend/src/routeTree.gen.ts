/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as CreateItemImport } from './routes/create-item'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as ItemsIdImport } from './routes/items.$id'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CreateItemRoute = CreateItemImport.update({
  id: '/create-item',
  path: '/create-item',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsIdRoute = ItemsIdImport.update({
  id: '/items/$id',
  path: '/items/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/create-item': {
      id: '/create-item'
      path: '/create-item'
      fullPath: '/create-item'
      preLoaderRoute: typeof CreateItemImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/items/$id': {
      id: '/items/$id'
      path: '/items/$id'
      fullPath: '/items/$id'
      preLoaderRoute: typeof ItemsIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRoute
  '/create-item': typeof CreateItemRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/items/$id': typeof ItemsIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRoute
  '/create-item': typeof CreateItemRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/items/$id': typeof ItemsIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRoute
  '/create-item': typeof CreateItemRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/items/$id': typeof ItemsIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/create-item' | '/login' | '/register' | '/items/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/create-item' | '/login' | '/register' | '/items/$id'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/create-item'
    | '/login'
    | '/register'
    | '/items/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRoute
  CreateItemRoute: typeof CreateItemRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ItemsIdRoute: typeof ItemsIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute,
  CreateItemRoute: CreateItemRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ItemsIdRoute: ItemsIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/create-item",
        "/login",
        "/register",
        "/items/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx"
    },
    "/create-item": {
      "filePath": "create-item.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/items/$id": {
      "filePath": "items.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
